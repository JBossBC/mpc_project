server:
  port: 8399
spring:
  application:
    name: did-distributed-identity-system
  profiles:
    active: dev
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://47.108.136.238:3306/did_sys?useSSL=false&useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8
    username: root
    password: 73ffac5cff92aab8
    druid:
      initialSize: 10   #初始化连接个数
      minIdle: 10       #最小空闲连接个数
      maxActive: 100    #最大连接个数
      maxWait: 60000    #获取连接时最大等待时间，单位毫秒。
      timeBetweenEvictionRunsMillis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      minEvictableIdleTimeMillis: 30000     #配置一个连接在池中最小生存的时间，单位是毫秒
      validationQuery: select 'x' #用来检测连接是否有效的sql，要求是一个查询语句。
      testWhileIdle: true       #建议配置为true，不影响性能，并且保证安全性。如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      testOnBorrow: true        #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnReturn: false       #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      poolPreparedStatements: false #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      maxPoolPreparedStatementPerConnectionSize: -1 #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      filters: stat,wall #通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat，日志用的filter:log4j，防御sql注入的filter:wall
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      useGlobalDataSourceStat: false # 合并多个DruidDataSource的监控数据
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  cache:
    type: redis
  redis:
    host: 49.234.147.30
    port: 6388
    password: TMH!=@$%*90LSH##+_57428
    database: 0
    lettuce:
      pool:
        max-active: 100
        max-wait: -1ms # 连接池最大阻塞等待时间，负值表示没有限制
        max-idle: 8
  servlet:
    multipart:
      enabled: true
      max-file-size: 100MB
      max-request-size: 100MB
  mail:
    username: 1054109492@qq.com
    password: mrbhwgzlsdylbefe
    host: smtp.qq.com

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath:mapper/*/*.xml
logging:
  level:
    root: WARN


## 分布式文件系统fastdfs配置
#dubbo:
#  cloud:
#    subscribed-services: sso-system
#  #  scan:
#  #    base-packages: org.cuit.epoch.sso.service.*.impl
#  protocol:    #Dubbo 服务暴露的协议配置，其中子属性 name 为协议名称，port 为协议端口（ -1 表示自增端口，从 20880 开始）
#    name: dubbo
#    port: -1  #dubbo协议缺省端口为20880，rmi协议缺省端口为1099，http和hessian协议缺省端口为80；如果没有配置port，则自动采用默认端口，如果配置为-1，则会分配一个没有被占用的端口。Dubbo 2.4.0+，分配的端口在协议缺省端口的基础上增长，确保端口段可控
#  registry:
#    #dubbo服务注册端口，注册中心服务器地址，如果地址没有端口缺省为9090，同一集群内的多个地址用逗号分隔，如：ip:port,ip:port
#    #其中前缀spring-cloud说明：挂载到 Spring Cloud注册中心
#    address: spring-cloud://lab-m3.v6.navy
#    #check: false  #关闭注册中心是否启动的相关检查,false表示不检查注册中心是否启动，就不会报错
#  consumer:
#    check: false  #关闭订阅服务是否启动的检查【检查时，没有服务提供者会报错】
#fdfs:
#  prefixUrl: http://1.15.245.21:8888/
#  so-timeout: 1500 # socket连接超时时间
#  connect-timeout: 6000 # 连接tracker超时时间
#  thumb-image: #缩略图生成参数 ，可选
#    width: 150
#    height: 150
#  tracker-list: #TrackerList参数,支持多个
#    - 1.15.245.21:22122
#  pool:
#    #从池中借出的对象的最大数目（配置为-1表示不限制）
#    max-total: -1
#    #获取连接时的最大等待毫秒数,默认值5000
#    max-wait-millis: 5000 #
#    #每个key最大连接数
#    max-total-per-key: 50
#    #每个key对应的连接池最大空闲连接数
#    max-idle-per-key: 10
#    #每个key对应的连接池最小空闲连接数
#    max_idle_per_key: 5
#jwt:
#  #设置token的过期时间，单位为秒
#  token-expired-time: 36000 #10小时
#  #设置token的id
#  id: tokenId
#  #设置密钥
#  secret: aPbOBbnH4gnZBzIYEY7mxWNu49kYljNPMeva9Fjrwwqzw0bFlO0kPXZTCGaVcw0j

